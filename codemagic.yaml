workflows:
  ios_unsigned_ipa:
    name: iOS unsigned IPA (no codesign)
    max_build_duration: 60
    environment:
      flutter: stable
      xcode: 15.4
      vars:
        IOS_MIN_VER: "15.0"
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "*"
          include: true
          source: true

    scripts:
      - name: Flutter clean & pub get
        script: |
          flutter --version
          flutter clean
          rm -rf ios/Pods ios/Podfile.lock
          flutter pub get

      - name: Write Podfile (Firebase 10.x, Swift 5, iOS 15)
        script: |
          cat > ios/Podfile <<'POD'
          platform :ios, '15.0'
          ENV['COCOAPODS_DISABLE_STATS'] = 'true'

          project 'Runner', {
            'Debug' => :debug,
            'Profile' => :release,
            'Release' => :release,
          }

          # Resolve FLUTTER_ROOT robustly
          flutter_root = ENV['FLUTTER_ROOT']
          if flutter_root.nil? || flutter_root.empty?
            begin
              machine = `flutter --version --machine 2>/dev/null`
              m = machine.match(/"flutterRoot"\s*:\s*"([^"]+)"/)
              flutter_root = m[1] unless m.nil?
            rescue
              flutter_root = nil
            end
          end
          if flutter_root.nil? || flutter_root.empty?
            which_flutter = `which flutter`.strip
            if !which_flutter.nil? && !which_flutter.empty?
              bin_dir = File.dirname(which_flutter)
              maybe_root = File.expand_path('..', bin_dir)
              candidate = File.join(maybe_root, 'flutter')
              flutter_root = candidate if File.exist?(candidate)
            end
          end
          raise 'FLUTTER_ROOT not resolved; cannot load podhelper.rb' if flutter_root.nil? || flutter_root.empty?
          load File.join(flutter_root, 'packages', 'flutter_tools', 'bin', 'podhelper.rb')

          use_frameworks! :linkage => :static
          use_modular_headers!

          # ✅ ثبت فقط حزم Firebase العلوية، ودع GoogleUtilities & Internals تُحل تلقائياً
          $FirebaseVersion = '10.25.0'

          flutter_ios_podfile_setup

          target 'Runner' do
            flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

            # Firebase (علوية فقط)
            pod 'Firebase/Core', $FirebaseVersion
            pod 'FirebaseFirestore', $FirebaseVersion
          end

          post_install do |installer|
            installer.pods_project.targets.each do |t|
              flutter_additional_ios_build_settings(t)
              t.build_configurations.each do |config|
                config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
                config.build_settings['SWIFT_VERSION'] = '5.0'
                config.build_settings['ENABLE_BITCODE'] = 'NO'
                # نظّف أي فلاغات Swift 6 تجي من بيئة البيلدر
                flags = config.build_settings['OTHER_SWIFT_FLAGS']
                if flags.is_a?(String)
                  cleaned = flags.split(' ').reject { |f|
                    f.include?('enable-upcoming-feature') || f.include?('enable-experimental-feature') || f.include?('swift-version')
                  }.join(' ')
                  config.build_settings['OTHER_SWIFT_FLAGS'] = cleaned
                end
                config.build_settings['SWIFT_ENABLE_EXPERIMENTAL_FEATURES'] = ''
              end
            end
          end
          POD

      - name: Ensure GoogleService-Info.plist exists
        script: |
          if [ ! -f "ios/Runner/GoogleService-Info.plist" ]; then
            echo "❌ ios/Runner/GoogleService-Info.plist غير موجود. نزّله من Firebase Console (مشروع platon-tv) وضعه هنا."
            ls -lah ios/Runner || true
            exit 1
          fi

      - name: CocoaPods install (with repo update)
        script: |
          cd ios
          pod repo update
          pod install --repo-update --verbose
          cd -

      - name: Build unsigned IPA (no code signing)
        script: |
          # تأكد pubspec عندك يستخدم:
          # firebase_core: 2.24.2
          # cloud_firestore: 4.15.9
          flutter build ipa --release --no-codesign
          echo "== Search IPA =="
          find build/ios -maxdepth 3 -type f -name "*.ipa" -print || true
          echo "== List =="
          find build/ios -maxdepth 3 -print

      - name: Verify artifact
        script: |
          if [ -f "build/ios/ipa/Runner.ipa" ]; then
            echo "✅ IPA ready: build/ios/ipa/Runner.ipa"
          else
            echo "❌ IPA not found, listing:"
            find build -maxdepth 4 -type f -name "*.ipa" -print
            exit 1
          fi

    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/archive/*.xcarchive

    publishing:
      email:
        recipients:
          - "you@example.com"
        notify:
          success: true
          failure: true
