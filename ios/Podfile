platform :ios, '15.0'

# عرّف FLUTTER_ROOT بشكل صحيح (Codemagic يضبطه عادةً إلى /Users/builder/programs/flutter)
flutter_root = ENV['FLUTTER_ROOT'] || '/Users/builder/programs/flutter'
raise "FLUTTER_ROOT not set or not found at #{flutter_root}" unless File.exist?(flutter_root)

load File.join(flutter_root, 'packages', 'flutter_tools', 'bin', 'podhelper.rb')

use_frameworks! :linkage => :static
use_modular_headers!

target 'Runner' do
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  # ✅ استخدم واجهة Flutter الحديثة
  flutter_post_install(installer) if defined?(flutter_post_install)

  # ارفع الحد الأدنى للنظام وثبّت إعدادات الربط لكل Targets
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
      config.build_settings['OTHER_LDFLAGS'] ||= ['$(inherited)']
      config.build_settings['OTHER_CFLAGS']  ||= ['$(inherited)']
    end
  end

  # فعّل modules للبودات اللي تحتاجها مع Swift عندما نبني static frameworks
  %w[
    GoogleUtilities
    FirebaseCore
    FirebaseCoreInternal
    FirebaseFirestore
    FirebaseAppCheckInterop
    FirebaseCoreExtension
  ].each do |name|
    pod_target = installer.pod_targets.find { |pt| pt.name == name }
    next unless pod_target
    pod_target.user_build_configurations.keys.each do |cfg|
      pod_target.build_settings(cfg)['DEFINES_MODULE'] = 'YES'
    end
  end
end
