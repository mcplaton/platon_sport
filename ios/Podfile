platform :ios, '15.0'
use_frameworks! :linkage => :static
use_modular_headers!
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# ✅ حمّل podhelper.rb من مسار Flutter الرسمي (لا تعتمد على ios/Flutter/podhelper.rb)
flutter_root = ENV['FLUTTER_ROOT']
if flutter_root.nil? || flutter_root.empty?
  flutter_root = `flutter --version --machine 2>/dev/null | grep -o '"engineRevision":"[^"]*"' || true`
  flutter_root = File.expand_path('..', __dir__) # fallback
end
load File.join(File.expand_path('..', __dir__), 'packages', 'flutter_tools', 'bin', 'podhelper.rb')

target 'Runner' do
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  # 🔧 إصلاح مشكلة الـ Swift static + module maps
  pod 'GoogleUtilities', '7.13.1', :modular_headers => true
  # إذا احتجت Firebase منتجات إضافية فعّلها هنا (اختياري):
  # pod 'Firebase/Analytics'
end

post_install do |installer|
  installer.pods_project.targets.each do |t|
    t.build_configurations.each do |config|
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['SWIFT_VERSION'] = '5.0'
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      # إجبار ربط إطار Flutter
      config.build_settings['OTHER_LDFLAGS'] = '$(inherited) -framework Flutter'
    end
    # gRPC كـ static لتقليل تعارضات الدمج
    if t.name == 'gRPC-C++' || t.name == 'gRPC-Core'
      t.build_configurations.each do |config|
        config.build_settings['MACH_O_TYPE'] = 'staticlib'
      end
    end
  end
end
