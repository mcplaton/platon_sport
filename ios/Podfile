# ios/Podfile
platform :ios, '15.0'
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# ابحث عن مسار Flutter SDK بطريقة تعمل على الماك و Codemagic
def find_flutter_root()
  env = ENV['FLUTTER_ROOT']
  return env if env && File.exist?(env)
  which = `which flutter`.strip
  raise '❌ Flutter SDK not found in PATH' if which.empty?
  File.expand_path(File.join(File.dirname(which), '..'))
end

flutter_root = find_flutter_root()
require File.expand_path('packages/flutter_tools/bin/podhelper', flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  # نجبر البودات تكون static ونفعّل modular headers لتفادي مشاكل Firebase
  use_frameworks! :linkage => :static
  use_modular_headers!

  # يركّب كل الـ plugins + Flutter.xcframework صح
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

# مهم: لا تستدعِ flutter_additional_ios_build_settings
# نضبط المطلوب يدويًا لتجنّب خطأ platform_name مع CocoaPods 1.16.x
post_install do |installer|
  installer.pods_project.targets.each do |t|
    t.build_configurations.each do |bc|
      settings = bc.build_settings

      # حدّ أدنى iOS مدعوم
      settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'

      # بنية ثابتة متوافقة مع سويفت
      settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'gnu++17'
      settings['CLANG_CXX_LIBRARY'] = 'libc++'
      settings['SWIFT_VERSION'] = '5.0'

      # استثناء arm64 للمحاكي (تسريع CI)
      settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'

      # Flutter يعطل bitcode منذ زمان
      settings['ENABLE_BITCODE'] = 'NO'
    end
  end

  # تأكد من تفعيل "Always Embed Swift Standard Libraries" على الهدف Runner
  installer.aggregate_targets.each do |aggregate_target|
    aggregate_target.user_project.native_targets.each do |native_target|
      native_target.build_configurations.each do |config|
        config.build_settings['ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES'] = 'YES'
      end
    end
  end
end
