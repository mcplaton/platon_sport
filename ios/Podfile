# ios/Podfile — كامل
platform :ios, '15.0'
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def find_flutter_root()
  env = ENV['FLUTTER_ROOT']
  return env if env && File.exist?(env)
  which = `which flutter`.strip
  raise '❌ Flutter SDK not found in PATH' if which.empty?
  File.expand_path(File.join(File.dirname(which), '..'))
end

flutter_root = find_flutter_root()
require File.expand_path('packages/flutter_tools/bin/podhelper', flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  # لا تستخدم use_frameworks! ولا use_modular_headers!
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |t|
    t.build_configurations.each do |bc|
      settings = bc.build_settings
      settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
      settings['SWIFT_VERSION'] = '5.0'
      settings['ENABLE_BITCODE'] = 'NO'
      settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      settings['CLANG_ENABLE_MODULES'] = 'YES'
      settings['DEFINES_MODULE'] = 'YES'
      settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'gnu++17'
      settings['CLANG_CXX_LIBRARY'] = 'libc++'
      settings['OTHER_CFLAGS'] = '$(inherited)'

      # مسارات رؤوس Flutter
      inherited = '$(inherited)'
      public_headers = '${PODS_ROOT}/Headers/Public'
      flutter_headers = '${PODS_ROOT}/Headers/Public/Flutter'
      existing = settings['HEADER_SEARCH_PATHS']
      if existing.is_a?(String)
        settings['HEADER_SEARCH_PATHS'] = [existing, inherited, public_headers, flutter_headers].uniq
      else
        settings['HEADER_SEARCH_PATHS'] = [inherited, public_headers, flutter_headers]
      end

      # استثناء arm64 للمحاكي
      settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
    end
  end

  # تضمين مكتبات Swift القياسية دائمًا
  installer.aggregate_targets.each do |agg|
    agg.user_project.native_targets.each do |nt|
      nt.build_configurations.each do |cfg|
        cfg.build_settings['ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES'] = 'YES'
      end
    end
  end
end
